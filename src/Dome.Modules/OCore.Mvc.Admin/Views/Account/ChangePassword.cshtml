@model ChangePasswordViewModel
@{
    ViewBag.Title = "修改密码";
    ViewBag.CurrentPageName = "0";
}
<div class="page-content">
    <div class="page-bar">
        <ul class="page-breadcrumb">
            <li>
                <a href="@Url.Action("index","home")">首页</a>
                <i class="fa fa-circle"></i>
            </li>
            <li>
                <span>帐户管理</span>
            </li>
        </ul>
    </div>
    <h1 class="page-title">
        修改密码
    </h1>
    <div class="row">
        <div class="col-md-12 ">
            <div class="portlet light bordered">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="icon-share font-dark"></i>
                        <span class="caption-subject font-dark bold uppercase">修改密码</span>
                    </div>
                </div>
                <div class="portlet-body">
                    <form action="@Url.Action("ChangePassword")" class="form-horizontal" id="form1">
                        <div class="note note-info">
                            <h4 class="block">系统提示！</h4>
                            <p>带<span class="required"> * </span>号的为必填项</p>
                        </div>
                        <div class="form-body">
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    @Html.DisplayNameFor(c => c.OldPassword)
                                    <span class="required"> * </span>
                                </label>
                                <div class="col-md-4">

                                    @Html.PasswordFor(m => m.OldPassword, new
                               {
                                   @class = "form-control"
                               })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    @Html.DisplayNameFor(c => c.NewPassword)
                                    <span class="required"> * </span>
                                </label>
                                <div class="col-md-4">
                                    @Html.PasswordFor(m => m.NewPassword, new
                               {
                                   @class = "form-control"
                               })

                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    @Html.DisplayNameFor(c => c.ConfirmPassword)
                                    <span class="required"> * </span>
                                </label>
                                <div class="col-md-4">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new
                               {
                                   @class = "form-control",
                               })

                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-9">@Html.AntiForgeryToken()
                                    <button type="submit" class="btn green">提交</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
    @section scripts{
    <script>
        var CurrentPage = function () {
            var handleLogin = function (vm) {

                var $loginForm = $('#form1');

                $loginForm.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",
                    rules: {
                        OldPassword: {
                            required: true,
                            minlength: 6,
                            maxlength: 100
                        },
                        NewPassword: {
                            required: true,
                            minlength: 6,
                            maxlength: 100
                        },
                        ConfirmPassword: {
                            equalTo: "#NewPassword"
                        }
                    },

                    invalidHandler: function (event, validator) { //提交表单时显示错误信息
                        //$('.alert-danger', $('.login-form')).show();
                        //alert.hide();
                        //error1.show();
                    },

                    highlight: function (element) { // 高亮显示出错误的输入项（input）
                        $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
                    },

                    success: function (label) { //
                        label.closest('.form-group').removeClass('has-error');
                        label.remove();
                    },

                    errorPlacement: function (error, element) {
                        if (element.closest('.input-icon').size() === 1) {
                            error.insertAfter(element.closest('.input-icon'));
                        } else {
                            error.insertAfter(element);
                        }
                    },

                    submitHandler: function (form) {

                    }
                });

                $loginForm.find('input').keypress(function (e) {
                    if (e.which == 13) {
                        if ($('#form1').valid()) {
                            $('#form1').submit(); //form validation success, call ajax form submit
                        }
                        return false;
                    }
                });

                $loginForm.submit(function (e) {
                    e.preventDefault();

                    if (!$('#form1').valid()) {
                        return;
                    }
                    //console.log("seee");

                    App.blockUI({
                        message: "正在提交，请稍后...",
                        boxed: true
                    });

                    var data = $loginForm.serialize()
                    var token = $("input[name='__RequestVerificationToken']").val();
                    $.ajax({
                        dataType: "json",
                        type: "POST",
                        url: $loginForm.attr('action'),
                        data: data,
                        headers:
                        {
                            "RequestVerificationToken": token
                        },
                        success: handleResponse
                    });
                });

                var handleResponse = function(json) {
                      App.unblockUI();
                      if (json.success) {
                          App.notify.success("密码设置成功");
                      } else if (json.errors[0] != undefined) {
                          App.notify.error(json.errors[0].message,"出现错误");
                      } else {
                          App.notify.error("服务器错误，请联系管理员解决！", "出现错误");
                      }
                 }
            }

            return {
                init: function (vm) {
                    var viewModel = InitEditer(vm);

                    handleLogin(viewModel);
                }
            };
        }();

        $(function () {
             var vm = {
                "targetPageUrl":"@Url.Action("ChangePassword")"
            };

            if (CurrentPage) {
                CurrentPage.init(vm);
             }
        });
    </script>
}