@model LoginViewModel
@{
    ViewBag.Title = "登录";
    Layout = "_Layout.cshtml";
}

<form class="login-form" action="@Url.Action("Login","Home")" method="post">
    <h3 class="form-title font-green">用户登录</h3>
    <div class="alert alert-danger display-hide" id="error">
        <button class="close" data-close="alert"></button>
        <strong>登录失败：</strong><span>...</span>
    </div>
    <div class="alert alert-success display-hide" id="success">
        <button class="close" data-close="alert"></button>
        登录成功，页面跳转中...
    </div>
    <div class="form-group">
        <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
        <label class="control-label visible-ie8 visible-ie9">用户名</label>
        <input class="form-control form-control-solid placeholder-no-fix" type="text" autocomplete="off" placeholder="请输入Email地址" name="Email" value="@Model.Email" />
    </div>
    <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">密码</label>
        <input class="form-control form-control-solid placeholder-no-fix" type="password" autocomplete="off" placeholder="密码" name="Password" value="@Model.Password" />
    </div>
    <div class="form-actions">
        <button type="submit" class="btn green uppercase">登录</button>
        <label class="rememberme check mt-checkbox mt-checkbox-outline">
            @if (Model.RememberMe)
            {
                <input type="checkbox" checked="checked" name="RememberMe" value="true">
            }
            else
            {
                <input type="checkbox" name="RememberMe" value="false">
            }记住密码
            <span></span>
        </label>
        <a href="javascript:;" id="forget-password" class="forget-password">忘记密码?</a>
    </div>
    @Html.AntiForgeryToken()
</form>
@{if (Model.OtherLogins.Count > 0)
    {
        <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
            @Html.AntiForgeryToken()
            <div class="login-options">
                <h4>其他方式登录</h4>
                <ul class="social-icons">
                    @foreach (var provider in Model.OtherLogins)
                    {
                        var classx = "social-icon-color ";
                        classx = classx + provider.Name.ToLower();

                        <li>
                            @* <a class="social-icon-color qq" data-original-title="QQ" href="javascript:;"></a>*@
                            <button type="submit" name="provider" value="@provider.Name" class="@classx"></button>
                        </li>

                    }
                </ul>
            </div>
        </form>
    }}

<div class="create-account">
    <p>
        <a href="javascript:;" id="register-btn" class="uppercase">注册新用户</a>
    </p>
</div>

@section css{
    <link href="~/OCore.Mvc.Admin/css/Login.css" rel="stylesheet"/>
}
@section scripts {
    <script>
        var CurrentPage = function () {

            var handleLogin = function (vm) {

                var $loginForm = $('.login-form');

                $loginForm.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",
                    rules: {
                        Email: {
                            required: true,
                            email: true
                        },
                        Password: {
                            required: true,
                            minlength: 6,
                            maxlength: 20
                        }
                    },

                    messages: {
                        Email: {
                            required: "请输入正确的Email地址"
                        },
                        Password: {
                            required: "请输入登录密码"
                        }
                    },

                    invalidHandler: function (event, validator) { //提交表单时显示错误信息
                        //$('.alert-danger', $('.login-form')).show();
                        //alert.hide();
                        //error1.show();
                    },

                    highlight: function (element) { // 高亮显示出错误的输入项（input）
                        $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
                    },

                    success: function (label) { //
                        label.closest('.form-group').removeClass('has-error');
                        label.remove();
                    },

                    errorPlacement: function (error, element) {
                        if (element.closest('.input-icon').size() === 1) {
                            error.insertAfter(element.closest('.input-icon'));
                        } else {
                            error.insertAfter(element);
                        }
                        //error.insertAfter(element.closest('.input-icon'));
                    },

                    submitHandler: function (form) {
                        $(form).find('.alert-danger').hide();
                        $(form).find('.alert-success').hide();
                    }
                });

                $loginForm.find('input').keypress(function (e) {
                    if (e.which == 13) {
                        if ($('.login-form').valid()) {
                            $('.login-form').submit(); //form validation success, call ajax form submit
                        }
                        return false;
                    }
                });

                $loginForm.submit(function (e) {
                    e.preventDefault();

                    if (!$('.login-form').valid()) {
                        return;
                    }
                    //console.log("seee");

                    App.blockUI({
                        //animate: true,
                        //overlayColor: 'note',
                        message: "正在提交，请稍后...",
                        boxed: true
                        //animate: true,
                        //iconOnly: true,
                        //textOnly: true
                    });

                    var data = $loginForm.serialize()
                    //console.log(data);
                    var token = $("input[name='__RequestVerificationToken']").val();
                    $.ajax({
                        //contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        type: "POST",
                        url: $loginForm.attr('action'),
                        data: data,
                        headers:
                        {
                            "RequestVerificationToken": token
                        },
                        success: handleResponse
                    });
                });

                var handleResponse = function(json) {//JSON.stringify()
                      App.unblockUI();
                      //success1.hide();
                      if (json.success) {
                          $(".alert-success").show();
                          setTimeout(function () {
                              $(".alert-success").hide();
                              location.href = vm.HomePage_url;
                          }, 3000);
                      } else if (json.errors[0] != undefined) {
                          //console.log(errorinfo);
                          $("#error").find("span").text(json.errors[0].message).show(200);
                          $("#error").show(200).delay(5000).hide(500);
                      }
                 }

                $('#forget-password').click(function () {
                    location.href = vm.ForgetPage_url;
                });
                $('#register-btn').click(function () {
                    location.href = vm.RegisterPage_url;
                });
            }

            return {
                init: function (vm) {
                    handleLogin(vm);
                }
            };
        }();

        $(function () {
             var vm = {
                "ForgetPage_url":"@Url.Action("Forget", "Home")",
                "RegisterPage_url":"@Url.Action("Register", "Home")",
                "HomePage_url": "@ViewData["ReturnUrl"]" === "" ? "@Url.Action("Index", "Home")" : "@ViewData["ReturnUrl"]"
            };

            if (CurrentPage) {
                CurrentPage.init(vm);
            }
        });
    </script>
}