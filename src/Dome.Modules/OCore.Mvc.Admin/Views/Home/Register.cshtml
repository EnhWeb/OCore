@model OCore.Mvc.Admin.Models.RegisterViewModel
@{
    ViewBag.Title = "用户注册";
    Layout = "_Layout.cshtml";
}

<form class="register-form" id="register-form" action="@Url.Action("Register","Home")" method="post">
    <h3 class="font-green">注册账户</h3>
    <div class="alert alert-danger display-hide" id="error">
        <button class="close" data-close="alert"></button>
        <strong>注册失败：</strong><span>...</span>
    </div>
    <div class="alert alert-success display-hide" id="success">
        <button class="close" data-close="alert"></button>
        注册成功，请等待管理员审核。
    </div>
    <p class="hint"> 帐户: </p>
    <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">用户名</label>
        <input class="form-control placeholder-no-fix" type="text" autocomplete="off" placeholder="邮箱地址" name="Email" value="@Model.Email" />
    </div>
    <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">密码</label>
        <input class="form-control placeholder-no-fix" type="password" autocomplete="off" id="register_password" placeholder="登录密码" name="Password" value="@Model.Password" />
    </div>
    <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">确认密码</label>
        <input class="form-control placeholder-no-fix" type="password" autocomplete="off" placeholder="确认密码" name="Confirmpassword" value="@Model.ConfirmPassword" />
    </div>
    <p class="hint"> 个人信息: </p>
    <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">姓名</label>
        <input class="form-control placeholder-no-fix" type="text" placeholder="姓名" name="FullName" value="@Model.FullName" />
    </div>
    <div class="form-group">
        <label class="control-label visible-ie8 visible-ie9">手机号码</label>
        <input class="form-control placeholder-no-fix" type="text" placeholder="手机号码" name="PhoneNumber" value="@Model.PhoneNumber" />
    </div>
    <div class="form-group margin-top-20 margin-bottom-20">
        <label class="mt-checkbox mt-checkbox-outline">
            <input type="checkbox" id="agree" name="agree" /> 我已阅读并同意相关
            <a href="javascript:;"> 服务条款 </a>和
            <a href="javascript:;"> 隐私政策 </a>
            <span></span>
        </label>
        <div id="register_agree_error"> </div>
    </div>
    <div class="form-actions">
        <button type="button" id="register-back-btn" class="btn green btn-outline">返回登录</button>
        <button type="submit" id="register-submit-btn" class="btn btn-success uppercase pull-right">提交注册</button>
    </div>
    @Html.AntiForgeryToken()
</form>
@section css{
    <link href="/OCore.Mvc.Admin/css/login.css" rel="stylesheet" asp-append-version="true" />
    <style>
        .mt-radio, .mt-checkbox {
            margin-bottom: 0;
        }
    </style>
}
@section scripts {
    <script>
        var RegisterPage = function () {
            var HandleRegister = function (vm) {
                var $RegisterForm = $('.register-form');
                $RegisterForm.show();

                var validator = $RegisterForm.validate({
                    errorElement: 'span', //default input error message container
                    errorClass: 'help-block', // default input error message class
                    focusInvalid: false, // do not focus the last invalid input
                    ignore: "",
                    rules: {
                        Email: {
                            required: true,
                            remote: {
                                url: vm.valid_email_url
                            },
                            email: true
                        },
                        Password: {
                            required: true,
                            minlength: 6,
                            maxlength: 18
                        },
                        Confirmpassword: {
                            equalTo: "#register_password"
                        },
                        FullName: {
                            required: true,
                            remote: {
                                url: vm.valid_fullName_url
                            },
                            minlength: 2,
                            maxlength: 10
                        },
                        PhoneNumber: {
                            required: true,
                            remote: {
                                url: vm.valid_phoneNumber_url
                            },
                            //minlength: 11,
                            rangelength: [11, 11]
                        },
                        agree: "required"
                    },

                    messages: { // custom messages for radio buttons and checkboxes
                        Email: {
                            remote: "邮箱地址已被注册"
                        },
                        FullName: {
                            remote: "姓名被占用，请联系管理员解决"
                        },
                        PhoneNumber: {
                            remote: "手机号已被注册"
                        },
                        agree: "请接受我们的服务条款和隐私政策",
                    },

                    invalidHandler: function (event, validator) { //display error alert on form submit

                    },

                    highlight: function (element) { // hightlight error inputs
                        $(element).closest('.form-group').addClass('has-error'); // set error class to the control group
                    },

                    success: function (label) {
                        label.closest('.form-group').removeClass('has-error');
                        label.remove();
                    },

                    errorPlacement: function (error, element) {
                        if (element.attr("name") == "agree") { // insert checkbox errors after the container
                            error.insertAfter($('#register_agree_error'));
                        } else if (element.closest('.input-icon').size() === 1) {
                            error.insertAfter(element.closest('.input-icon'));
                        } else {
                            error.insertAfter(element);
                        }
                    },

                    submitHandler: function (form) {
                        $(form).find('.alert-danger').hide();
                        $(form).find('.alert-success').hide();
                    }
                });

                $RegisterForm.find('input').keypress(function (e) {
                    if (e.which == 13) {
                        if ($('.register-form').valid()) {
                            $('.register-form').submit();
                        }
                        return false;
                    }
                });

                $RegisterForm.submit(function (e) {
                    e.preventDefault();

                    if (!$('.register-form').valid()) {
                        return;
                    }

                    App.blockUI({
                         message: "正在提交，请稍后...",
                         boxed: true
                    });

                    var data = $('.register-form').serialize()
                    //console.log(data);
                    var token = $("input[name='__RequestVerificationToken']").val();
                    $.ajax({
                        //contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        type: "POST",
                        url: $('.register-form').attr('action'),
                        data: data,
                        headers:
                        {
                            "RequestVerificationToken": token
                        },
                        success: handleResponse
                    });
                });

                $('#register-back-btn').click(function () {
                    location.href = vm.loginPage_url;
                });

                var handleResponse = function(json) { 
                      App.unblockUI();
 
                      if (json.success) {
                          $("#success").show();
                          document.getElementById("register-form").reset();
                          validator.resetForm();
                          @*setTimeout(function () {
                              success.hide();
                              location.href = "@Url.Action("index","home")";
                          }, 3000);*@
                       } else if (json.errors[0] != undefined) {
                          //console.log(errorinfo);
                          $("#error").find("span").text(json.errors[0].message).show(200);
                          $("#error").show(200).delay(5000).hide(500);
                      }
                 }
            }

            return {
                init: function (vm) {
                    HandleRegister(vm);
                }
            };
        }();

        $(function () {
            var vm = {
                "valid_email_url":"@Url.Action("CheckEmail", "Home")",
                "valid_fullName_url":"@Url.Action("CheckFullName", "Home")",
                "valid_phoneNumber_url":"@Url.Action("CheckPhoneNumber", "Home")",
                "loginPage_url":"@Url.Action("Login", "Home")"
            };

            RegisterPage.init(vm);
        });
    </script>
}